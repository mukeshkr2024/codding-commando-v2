version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile.dev # Specify the dev Dockerfile
  #   container_name: backend
  #   volumes:
  #     - ./backend:/app # Mount backend code for live reloading
  #   environment:
  #     - NODE_ENV=development # Set to development mode
  #     - MONGO_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
  #     # Other environment variables...
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - mongodb

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev # Specify the dev Dockerfile
  #   container_name: frontend
  #   volumes:
  #     - ./frontend:/app # Mount frontend code for live reloading
  #   environment:
  #     - NODE_ENV=development # Set to development mode
  #     # Other environment variables...
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "3034:8081"
    depends_on:
      - mongodb

volumes:
  mongodb_data:
    driver: local
